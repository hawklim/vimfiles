snippet php
	<?php
	${0}

snippet eof
	/* End of file ${1:file}.php */
	/* Location: ./${2:dir}/$1.php */

snippet eoc
	// END ${1:class_name} class

snippet l1
	// ------------------------------------------------------------------------

snippet l2
	// --------------------------------------------------------------------

snippet def
	define('${1:CONST}', ${2});${0}

snippet ec
	echo ${1};

snippet pec
	<?php echo ${1}; ?>

snippet arr
	$${1:array} = array('${2}' => ${3} ${0});

snippet inc
	include '${1:file}';${0}

snippet inco
	include_once '${1:file}';${0}

snippet req
	require '${1:file}';${0}

snippet reqo
	require_once '${1:file}';${0}

snippet a
	$${1:val1} = $${2:val2};${0}

snippet pr
	print_r(${1});${0}

snippet post
	$this->input->post('${1}')

snippet lm
	$this->load->model('${1:model_name}');

snippet if?
	$${1:ret} = (${2:#:condition}) ? ${3:#:a} : ${4:#:b};${0}

snippet if
	if (${1:#:condition})
	{
		${0}
	}

snippet ife
	if (${1:#:condition})
	{
		${2}
	}
	else
	{
		${3:#:code...}
	}
	{0}

snippet else
	else
	{
		${0}
	}

snippet elseif
	elseif (${1:#:condition})
	{
		${0}
	}

snippet for
	for ($${1:i}=${2:0}; $$1 < ${3:num}; $$1++)
	{
		${0}
	}

snippet fore
	foreach ($${1:array} as $${2:value})
	{
		${0}
	}

snippet forek
	foreach ($${1:array} as $${2:key} => $${3:value})
	{
		${0}
	}

snippet do
	do
	{
		${0}
	}
	while (${1:#:condition});

snippet wh
	while (${1:#:condition})
	{
		${0}
	}

snippet case
	case '${1:#:variable}' :
		${0:#:code...}
		break;

snippet sw
	switch (${1:#:variable})
	{
		case '${2:#:value}' :
			${3:#:code...}
			break;
		${0}
		default:
			${4:#:code...}
			break;
	}

snippet fun
abbr function () {}
	function ${1:function_name}(${2:#:args})
	{
		${0}
	}

snippet +fun
abbr public function () {}
	public function ${1:function_name}(${2:#:args})
	{
		${0}
	}

snippet *fun
abbr protected function () {}
	protected function ${1:function_name}(${2:#:args})
	{
		${0}
	}

snippet -fun
abbr private function () {}
	private function ${1:function_name}(${2:#:args})
	{
		${0}
	}

snippet ret
	return ${1};${0}

snippet retf
	return FALSE;

snippet rett
	return TRUE;

snippet class
	class ${1:class_name} {
		${0}
	}

snippet con
	function __construct(${1})
	{
		${0}
	}

snippet cc
	// ${1:text}

snippet cm
	/* ${1:text} */${0}

snippet c
	/**
	 * ${1}
	 */

snippet cidoc
	/*
	| -------------------------------------------------------------------
	| ${1:title}
	| -------------------------------------------------------------------
	| ${0}
	*/

snippet hdoc
	/**
	 * Thoth
	 *
	 * A free and open source platform for Q&A sites
	 *
	 * @package		Thoth
	 * @author		Thoth Dev Team
	 * @filesource
	 */

	// ------------------------------------------------------------------------
	${0}

snippet cdoc
	/**
	 * ${1:undocumented class#}
	 *
	 * @package		${2:Thoth}
	 * @subpackage	${3:subpackage}
	 * @author		${4:Thoth Dev Team}
	 **/

snippet fdoc
	/**
	 * ${1:undocumented function}
	 *
	 * @access	${2:public}
	 * @return	${3:data_type}
	 **/

snippet docd
	/**
	 * ${3:#:undocumented constant}
	 **/
	define(${1} ${2});${0}

snippet doch
	/**
	 * ${1}
	 *
	 * @author ${2}
	 * @version ${3}
	 * @copyright ${4}
	 * @package ${5:default}
	 **/

	/**
	 * Define DocBlock
	 **/
